name: docker
on:
  workflow_dispatch:
  push:
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          github-token: ${{ github.token }}
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      
      - uses: docker/login-action@v1 
        if: startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          pull: true
          push: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository }}:cache
            type=local,src=/tmp/.buildx-cache
          cache-to: mode=max,type=local,dest=/tmp/.buildx-cache

      - name: push cache image
        uses: docker/build-push-action@v2
        with:
          pull: false
          push: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || github.ref == 'refs/heads/cache' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=inline
          tags: ghcr.io/${{ github.repository }}:cache

      - name: export local image
        uses: docker/build-push-action@v2
        with:
          pull: false
          push: false
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          tags: ${{ github.event.repository.name }}

      - run: make check
      - name: sync Aptfile.lock
        if: failure()
        env:
          BOT_TOKEN: ${{ secrets.CR_PAT }}
        run: |
          git config --local user.email "hubot@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -am "sync Aptfile.lock"

          echo "::error ::Aptfile.lock outdated"

          GITHUB_USER=$(echo ${GITHUB_REPOSITORY} | cut -f 1 -d /)
          cat > ~/.netrc <<EOF
          machine github.com
            login $GITHUB_USER
            password $BOT_TOKEN
          EOF
          git remote add github "https://github.com/${GITHUB_REPOSITORY}"

          # Push & rebase 5 times
          rebases=0
          until [ $rebases -ge 5 ]; do
            if git push github HEAD:${GITHUB_REF}; then
              echo "::error ::Aptfile.lock update pushed. Please re-trigger the sync-lock workflow on this branch to confirm."
              exit 1
            else
              git pull --rebase github ${GITHUB_REF}
            fi
            rebases=$[$rebases+1]
          done
          exit 1