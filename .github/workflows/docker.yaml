name: docker
on:
  push:
  pull_request:
    types:
      - opened
      - labeled
      - synchronize
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # tag=v1
      - uses: docker/setup-buildx-action@f211e3e9ded2d9377c8cadc4489a4e38014bc4c9 # tag=v1.7.0
      - id: docker_meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # tag=v4.0.1
        with:
          github-token: ${{ github.token }}
          tags: |
            type=ref,event=tag
            type=raw,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }},value=${{ github.event.repository.default_branch }}
            type=raw,enable=${{ contains(github.event.pull_request.labels.*.name, 'docker:pr-image') }},value=pr-${{ github.event.pull_request.number }}
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}

      - uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # tag=v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      
      - uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # tag=v1 
        if: startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # tag=v2
        with:
          pull: true
          push: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || contains(github.event.pull_request.labels.*.name, 'docker:pr-image') }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: |
            type=gha
          cache-to: |
            mode=max,type=local,dest=/tmp/.buildx-cache

      - name: load local image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # tag=v2
        with:
          pull: false
          push: false
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          tags: ${{ github.event.repository.name }}
          cache-to: type=gha,mode=max

      - run: make check
      - name: sync Aptfile.lock
        if: failure()
        env:
          BOT_TOKEN: ${{ secrets.CR_PAT }}
          PUSHER_NAME: ${{ github.event.pusher.name }}
          PUSHER_EMAIL: ${{ github.event.pusher.email }}
        run: |
          git config --local user.email "$PUSHER_EMAIL"
          git config --local user.name "$PUSHER_NAME"
          git add .
          git commit -am "sync Aptfile.lock"

          echo "::error ::Aptfile.lock outdated"

          GITHUB_USER=$(echo ${GITHUB_REPOSITORY} | cut -f 1 -d /)
          cat > ~/.netrc <<EOF
          machine github.com
            login $GITHUB_USER
            password $BOT_TOKEN
          EOF
          git remote add github "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"

          # Push & rebase 5 times
          rebases=0
          until [ $rebases -ge 5 ]; do
            if git push github HEAD:${GITHUB_REF}; then
              echo "::error ::Aptfile.lock update pushed. Please push another commit to the branch."
              exit 1
            else
              git pull --rebase github ${GITHUB_REF}
            fi
            rebases=$[$rebases+1]
          done
          exit 1
