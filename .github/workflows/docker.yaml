name: docker
on:
  push:
  pull_request:
    types:
      - opened
      - labeled
      - synchronize
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - id: docker_meta
        uses: docker/metadata-action@v5
        with:
          github-token: ${{ github.token }}
          tags: |
            type=ref,event=tag
            type=raw,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }},value=${{ github.event.repository.default_branch }}
            type=raw,enable=${{ contains(github.event.pull_request.labels.*.name, 'docker:pr-image') }},value=pr-${{ github.event.pull_request.number }}
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
      - name: Checkout code so that we can hash the Dockerfile
        uses: actions/checkout@v4
      - name: Cache var-cache-apt
        uses: actions/cache@v3
        with:
          path: var-cache-apt
          key: var-cache-apt-${{ hashFiles('Dockerfile') }}
      - name: Cache var-lib-apt
        uses: actions/cache@v3
        with:
          path: var-lib-apt
          key: var-lib-apt-${{ hashFiles('Dockerfile') }}
      - name: inject var-cache-apt into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-source: var-cache-apt
          cache-target: /var/cache/apt
      - name: inject var-lib-apt into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-source: var-lib-apt
          cache-target: /var/lib/apt

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: docker/login-action@v3
        if: startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          pull: true
          push: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || contains(github.event.pull_request.labels.*.name, 'docker:pr-image') }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max



